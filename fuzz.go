package maildir

import (
	"fmt"
	"strings"
)
func init () {
	m, err = New("_obj/Maildir", true)
	if err != nil {
		fmt.Println(err)
	}
	_ = m
}

var (
	err error
	m *Maildir

)
// Data is random input generated by go-fuzz, note that in most cases it is invalid.
// The function must return 1 if the fuzzer should increase priority of the given input during subsequent
// fuzzing (for example, the input is lexically correct and was parsed successfully); -1 if the input must
// not be added to corpus even if gives new coverage; and 0 otherwise
func Fuzz(data []byte) int {
	buf := m.encodeName(string(data))
	fmt.Println(buf.String())
	if strings.Index(buf.String(), "_obj/Maildir/") != 0 {
		panic("unexpected dir")
	}
	return 1
}